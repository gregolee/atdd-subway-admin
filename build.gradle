plugins {
	id 'org.springframework.boot' version '2.4.0-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'java'
	id "org.ec4j.editorconfig" version "0.0.3"
	id 'checkstyle'
}

group = 'nextstep'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

// 1. Endcoding setting
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'
// 1. end

// 2. editorconfig plugin setting
editorconfig {
	excludes = ['build']
}
check.dependsOn editorconfigCheck
// 2. end

// 3. Checkstyle plugin setting
checkstyle {
	maxWarnings = 0 // 규칙이 어긋나는 코드가 하나라도 있을 경우 빌드 fail을 내고 싶다면 이 선언을 추가한다.
	configFile = file("${rootDir}/config/naver-checkstyle-rules.xml")
	configProperties = ["suppressionFile" : "${rootDir}/config/naver-checkstyle-suppressions.xml"]
	toolVersion ="8.24"  // checkstyle 버전 8.24 이상 선언
}
// 3. end

dependencies {
	// spring
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// handlebars
	implementation 'pl.allegro.tech.boot:handlebars-spring-boot-starter:0.3.0'

	// log
	implementation 'net.rakugakibox.spring.boot:logback-access-spring-boot-starter:2.7.1'

	testImplementation 'io.rest-assured:rest-assured:3.3.0'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	runtimeOnly 'com.h2database:h2'
}

test {
	useJUnitPlatform()
}
